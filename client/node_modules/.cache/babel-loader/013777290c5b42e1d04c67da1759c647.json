{"ast":null,"code":"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nclass PdfCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAndDownloadPdf = () => {\n      this.props.pdfGenerated();\n      axios.post(`${process.env.REACT_APP_URL_API}create-pdf`, this.state).then(() => axios.get(`${process.env.REACT_APP_URL_API}fetch-pdf/${this.props.email}`, {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        saveAs(pdfBlob, \"newPdf.pdf\");\n      }).catch(err => console.log(\"Error\", err));\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.createAndDownloadPdf();\n  } //handleChange = ({target: {value, name}}) => this.setState({[name]: value})\n\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nexport default PdfCreator;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/vendor/PdfCreator.js"],"names":["React","Component","axios","saveAs","PdfCreator","constructor","props","createAndDownloadPdf","pdfGenerated","post","process","env","REACT_APP_URL_API","state","then","get","email","responseType","res","pdfBlob","Blob","data","type","catch","err","console","log","componentDidMount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,oBAXmB,GAWI,MAAM;AAC3B,WAAKD,KAAL,CAAWE,YAAX;AACAN,MAAAA,KAAK,CACFO,IADH,CACS,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YADzC,EACsD,KAAKC,KAD3D,EAEGC,IAFH,CAEQ,MACJZ,KAAK,CAACa,GAAN,CACG,GAAEL,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAAY,KAAKN,KAAL,CAAWU,KAAM,EADhE,EAEE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAFF,CAHJ,EAQGH,IARH,CAQQI,GAAG,IAAI;AACX,cAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAG,CAACG,IAAL,CAAT,EAAqB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAArB,CAAhB;AACAnB,QAAAA,MAAM,CAACgB,OAAD,EAAU,YAAV,CAAN;AACD,OAXH,EAYGI,KAZH,CAYSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAZhB;AAaD,KA1BkB;;AAEjB,SAAKX,KAAL,GAAa,EAAb;AACD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,oBAAL;AACD,GARgC,CAUjC;;;AAmBAqB,EAAAA,MAAM,GAAG;AACP,WAAO,yCAAP;AACD;;AA/BgC;;AAkCnC,eAAexB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nclass PdfCreator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.createAndDownloadPdf();\n  }\n\n  //handleChange = ({target: {value, name}}) => this.setState({[name]: value})\n\n  createAndDownloadPdf = () => {\n    this.props.pdfGenerated();\n    axios\n      .post(`${process.env.REACT_APP_URL_API}create-pdf`, this.state)\n      .then(() =>\n        axios.get(\n          `${process.env.REACT_APP_URL_API}fetch-pdf/${this.props.email}`,\n          { responseType: \"blob\" }\n        )\n      )\n      .then(res => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, \"newPdf.pdf\");\n      })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  render() {\n    return <></>;\n  }\n}\n\nexport default PdfCreator;\n"]},"metadata":{},"sourceType":"module"}