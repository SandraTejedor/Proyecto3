{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/LoteriaNacional/list.js\";\nimport React from \"react\";\nimport NationalService from \"../../service/Nacional.service\";\nimport { Container, Row, Button, Modal } from \"react-bootstrap\"; // import CoasterCard from \"./Coaster-card\";\n// import CoasterForm from \"./Coaster-form\";\n\nimport NationalCard from \"./Nacional-Card\";\n\nclass NationalList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateNationalList();\n\n    this.updateNationalList = () => {\n      this._nationalService.nacionalList().then(nacional => this.setState({\n        nacional: nacional.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.deleteHandler = id => {\n      this._nationalService.delete(id).then(x => this.updateNationalList()).catch(err => console.log(\"Error\", err));\n    };\n\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: [],\n      otro: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"D\\xE9cimos disponibles online:\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.nacional.sort((a, b) => {\n      if (a.numero > b.numero) {\n        return 1;\n      }\n\n      if (a.numero < b.numero) {\n        return -1;\n      } else {\n        if (a.numero > b.numero) {\n          return 1;\n        }\n\n        if (a.numero < b.numero) {\n          return -1;\n        } // a must be equal to b\n        else {\n            if (a.serie > b.serie) {\n              return 1;\n            }\n\n            if (a.serie < b.serie) {\n              return -1;\n            } else {\n              if (a.fraccion > b.fraccion) {\n                return 1;\n              }\n\n              if (a.fraccion < b.fraccion) {\n                return -1;\n              }\n            }\n          }\n      }\n    }).map(nacional => React.createElement(NationalCard, Object.assign({\n      key: nacional._id\n    }, nacional, {\n      delete: this.deleteHandler,\n      updateNationalList: this.updateNationalList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default NationalList;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/LoteriaNacional/list.js"],"names":["React","NationalService","Container","Row","Button","Modal","NationalCard","NationalList","Component","constructor","props","componentDidMount","updateNationalList","_nationalService","nacionalList","then","nacional","setState","data","catch","err","console","log","deleteHandler","id","delete","x","state","otro","render","sort","a","b","numero","serie","fraccion","map","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport NationalService from \"../../service/Nacional.service\";\n\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\n\n// import CoasterCard from \"./Coaster-card\";\n// import CoasterForm from \"./Coaster-form\";\nimport NationalCard from \"./Nacional-Card\";\n\nclass NationalList extends React.Component {\n  constructor(props) {\n    super(props);\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: [],\n      otro: \"\"\n    };\n  }\n\n  componentDidMount = () => this.updateNationalList();\n\n  updateNationalList = () => {\n    this._nationalService\n      .nacionalList()\n      .then(nacional => this.setState({ nacional: nacional.data }))\n      .catch(err => console.log(\"Error\", err));\n  };\n  deleteHandler = id => {\n    this._nationalService\n      .delete(id)\n      .then(x => this.updateNationalList())\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  render() {\n    return (\n      <section>\n        <Container>\n          <h1>DÃ©cimos disponibles online:</h1>\n\n          <Row>\n            {/* {this.state.nacional.map(nacional => (\n              <NationalCard\n                key={nacional._id}\n                {...nacional}\n                delete={this.deleteHandler}\n                updateNationalList={this.updateNationalList}\n              />\n            )).sort()} */}\n            {this.state.nacional\n              .sort((a, b) => {\n                if (a.numero > b.numero) {\n                  return 1;\n                }\n                if (a.numero < b.numero) {\n                  return -1;\n                } else {\n                  if (a.numero > b.numero) {\n                    return 1;\n                  }\n                  if (a.numero < b.numero) {\n                    return -1;\n                  }\n                  // a must be equal to b\n                  else {\n                    if (a.serie > b.serie) {\n                      return 1;\n                    }\n                    if (a.serie < b.serie) {\n                      return -1;\n                    } else {\n                      if (a.fraccion > b.fraccion) {\n                        return 1;\n                      }\n                      if (a.fraccion < b.fraccion) {\n                        return -1;\n                      }\n                    }\n                  }\n                }\n              })\n              .map(nacional => (\n                <NationalCard\n                  key={nacional._id}\n                  {...nacional}\n                  delete={this.deleteHandler}\n                  updateNationalList={this.updateNationalList}\n                />\n              ))}\n          </Row>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default NationalList;\n"]},"metadata":{},"sourceType":"module"}