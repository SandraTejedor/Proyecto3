{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/gordo-card.js\";\nimport React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultService from \"../../service/Results.service\"; //import { Link } from \"react-router-dom\";\n\nclass GordoCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateGordoList();\n\n    this.updateGordoList = () => {\n      this._service.gordo().then(gordo => this.setState({\n        gordo: gordo.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this._service = new ResultService();\n    this.state = {\n      gordo: null,\n      showModalWindow: false\n    };\n  } //state con la info de la card\n  //cuando se monte llamar al servicio y actualizar el state\n\n\n  //pintar la carta con el state\n  render() {\n    return this.state.gordo ? React.createElement(Col, {\n      className: \"coaster-card\",\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Gordo del d\\xEDa \", this.state.gordo[2]), this.state.gordo[0].map((gordo, index) => React.createElement(\"span\", {\n      key: index,\n      className: \"numerosGordo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", gordo, \" \")), React.createElement(\"p\", {\n      className: \"reintegroGordo millon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"N\\xBAClave: \", this.state.gordo[1])) : \"Esperando resultados...\";\n  }\n\n}\n\nexport default GordoCard;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/gordo-card.js"],"names":["React","Component","Col","ResultService","GordoCard","constructor","props","componentDidMount","updateGordoList","_service","gordo","then","setState","data","catch","err","console","log","state","showModalWindow","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,MAAM,KAAKC,eAAL,EAZP;;AAAA,SAcnBA,eAdmB,GAcD,MAAM;AACtB,WAAKC,QAAL,CACGC,KADH,GAEGC,IAFH,CAEQD,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA,KAAK,CAACG;AAAf,OAAd,CAFjB,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAHhB;AAID,KAnBkB;;AAEjB,SAAKN,QAAL,GAAgB,IAAIN,aAAJ,EAAhB;AACA,SAAKe,KAAL,GAAa;AACXR,MAAAA,KAAK,EAAE,IADI;AAEXS,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID,GAR+B,CAUhC;AAEA;;;AAUA;AACAC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKF,KAAL,CAAWR,KAAX,GACL,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB,KAAKQ,KAAL,CAAWR,KAAX,CAAiB,CAAjB,CAAnB,CADF,EAEG,KAAKQ,KAAL,CAAWR,KAAX,CAAiB,CAAjB,EAAoBW,GAApB,CAAwB,CAACX,KAAD,EAASY,KAAT,KACvB;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGZ,KAFH,EAEU,GAFV,CADD,CAFH,EAQE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA+C,KAAKQ,KAAL,CAAWR,KAAX,CAAiB,CAAjB,CAA/C,CARF,CADK,GAYL,yBAZF;AAcD;;AAtC+B;;AAyClC,eAAeN,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultService from \"../../service/Results.service\";\n\n//import { Link } from \"react-router-dom\";\n\nclass GordoCard extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new ResultService();\n    this.state = {\n      gordo: null,\n      showModalWindow: false\n    };\n  }\n\n  //state con la info de la card\n\n  //cuando se monte llamar al servicio y actualizar el state\n  componentDidMount = () => this.updateGordoList();\n\n  updateGordoList = () => {\n    this._service\n      .gordo()\n      .then(gordo => this.setState({ gordo: gordo.data }))\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  //pintar la carta con el state\n  render() {\n    return this.state.gordo ? (\n      <Col className=\"coaster-card\" md={5}>\n        <h4>Gordo del día {this.state.gordo[2]}</h4>\n        {this.state.gordo[0].map((gordo , index)=> (\n          <span key={index}  className=\"numerosGordo\">\n            {\" \"}\n            {gordo}{\" \"}\n          </span>\n        ))}\n        <p className=\"reintegroGordo millon\">NºClave: {this.state.gordo[1]}</p>\n      </Col>\n    ) : (\n      \"Esperando resultados...\"\n    );\n  }\n}\n\nexport default GordoCard;\n"]},"metadata":{},"sourceType":"module"}