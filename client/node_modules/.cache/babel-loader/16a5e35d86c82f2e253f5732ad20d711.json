{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/gordo-card.js\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\"; //import { Link } from \"react-router-dom\";\n\nclass GordoCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateEuromillonList();\n\n    this.updateEuromillonList = () => {\n      this._service.euromillon().then(euro => this.setState({\n        euromillon: euro.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this._service = new ResultService();\n    this.state = {\n      euromillon: null,\n      showModalWindow: false\n    };\n  } //state con la info de la card\n  //cuando se monte llamar al servicio y actualizar el state\n\n\n  //pintar la carta con el state\n  render() {\n    return this.state.euromillon ? React.createElement(Col, {\n      className: \"coaster-card\",\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Resultado del Euromill\\xF3n del d\\xEDa\"), this.state.euromillon[0].map(euro => React.createElement(\"span\", {\n      className: \"numerosEuro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" \", euro, \" \")), this.state.euromillon[1].map(euro => React.createElement(\"span\", {\n      className: \"estrellasEuro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" \", euro, \" \")), React.createElement(\"span\", {\n      className: \"elmillon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.euromillon[2])) : \"Esperando resultados...\";\n  }\n\n}\n\nexport default GordoCard;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/gordo-card.js"],"names":["React","Col","GordoCard","Component","constructor","props","componentDidMount","updateEuromillonList","_service","euromillon","then","euro","setState","data","catch","err","console","log","ResultService","state","showModalWindow","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBC,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,MAAM,KAAKC,oBAAL,EAZP;;AAAA,SAcnBA,oBAdmB,GAcI,MAAM;AAC3B,WAAKC,QAAL,CACGC,UADH,GAEGC,IAFH,CAEQC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE,IAAI,CAACE;AAAnB,OAAd,CAFhB,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAHhB;AAID,KAnBkB;;AAEjB,SAAKP,QAAL,GAAgB,IAAIU,aAAJ,EAAhB;AACA,SAAKC,KAAL,GAAa;AACXV,MAAAA,UAAU,EAAE,IADD;AAEXW,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID,GAR+B,CAUhC;AAEA;;;AAUA;AACAC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKF,KAAL,CAAWV,UAAX,GACL,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEG,KAAKU,KAAL,CAAWV,UAAX,CAAsB,CAAtB,EAAyBa,GAAzB,CAA6BX,IAAI,IAChC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgCA,IAAhC,MADD,CAFH,EAKG,KAAKQ,KAAL,CAAWV,UAAX,CAAsB,CAAtB,EAAyBa,GAAzB,CAA6BX,IAAI,IAChC;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkCA,IAAlC,MADD,CALH,EAQE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKQ,KAAL,CAAWV,UAAX,CAAsB,CAAtB,CAA5B,CARF,CADK,GAYL,yBAZF;AAcD;;AAtC+B;;AAyClC,eAAeP,SAAf","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\n\n//import { Link } from \"react-router-dom\";\n\nclass GordoCard extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new ResultService();\n    this.state = {\n      euromillon: null,\n      showModalWindow: false\n    };\n  }\n\n  //state con la info de la card\n\n  //cuando se monte llamar al servicio y actualizar el state\n  componentDidMount = () => this.updateEuromillonList();\n\n  updateEuromillonList = () => {\n    this._service\n      .euromillon()\n      .then(euro => this.setState({ euromillon: euro.data }))\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  //pintar la carta con el state\n  render() {\n    return this.state.euromillon ? (\n      <Col className=\"coaster-card\" md={6}>\n        <h4>Resultado del Euromillón del día</h4>\n        {this.state.euromillon[0].map(euro => (\n          <span className=\"numerosEuro\"> {euro} </span>\n        ))}\n        {this.state.euromillon[1].map(euro => (\n          <span className=\"estrellasEuro\"> {euro} </span>\n        ))}\n        <span className=\"elmillon\">{this.state.euromillon[2]}</span>\n      </Col>\n    ) : (\n      \"Esperando resultados...\"\n    );\n  }\n}\n\nexport default GordoCard;\n"]},"metadata":{},"sourceType":"module"}