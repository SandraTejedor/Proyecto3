{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/auth/myOrders.js\";\nimport React from \"react\";\nimport NationalService from \"../../service/Nacional.service\";\nimport { Container, Row, Button, Modal } from \"react-bootstrap\"; // import CoasterCard from \"./Coaster-card\";\n// import CoasterForm from \"./Coaster-form\";\n\nimport MyOrderCard from \"../../components/LoteriaNacional/NacionalOrder-CardUser\";\n\nclass MyNationalOrder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateNationalList();\n\n    this.updateNationalList = () => {\n      this._nationalService.myOrderList().then(nacional => {\n        console.log(nacional);\n        this.setState({\n          nacional: nacional.data\n        });\n      }).catch(err => console.log(\"Error\", err));\n    };\n\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Lista de pedidos de \", this.props.loggedInUser.username, \" de Loter\\xEDa Nacional:\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, console.log(\"el state\", this.state.nacional), this.state.nacional.sort((a, b) => {\n      if (a.fechaSorteo > b.fechaSorteo) {\n        return 1;\n      }\n\n      if (a.fechaSorteo < b.fechaSorteo) {\n        return -1;\n      } else {\n        if (a.numero > b.numero) {\n          return 1;\n        }\n\n        if (a.numero < b.numero) {\n          return -1;\n        } // a must be equal to b\n        else {\n            if (a.serie > b.serie) {\n              return 1;\n            }\n\n            if (a.serie < b.serie) {\n              return -1;\n            } else {\n              if (a.fraccion > b.fraccion) {\n                return 1;\n              }\n\n              if (a.fraccion < b.fraccion) {\n                return -1;\n              }\n            }\n          }\n      }\n    }).map(nacional => React.createElement(MyOrderCard, Object.assign({\n      key: nacional._id\n    }, nacional, {\n      delete: this.deleteHandler,\n      updateNationalList: this.updateNationalList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default MyNationalOrder;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/auth/myOrders.js"],"names":["React","NationalService","Container","Row","Button","Modal","MyOrderCard","MyNationalOrder","Component","constructor","props","componentDidMount","updateNationalList","_nationalService","myOrderList","then","nacional","console","log","setState","data","catch","err","state","render","loggedInUser","username","sort","a","b","fechaSorteo","numero","serie","fraccion","map","_id","deleteHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,iBAA9C,C,CAEA;AACA;;AACA,OAAOC,WAAP,MAAwB,yDAAxB;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,iBATmB,GASC,MAAM,KAAKC,kBAAL,EATP;;AAAA,SAWnBA,kBAXmB,GAWE,MAAM;AACzB,WAAKC,gBAAL,CACGC,WADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAEA,QAAQ,CAACI;AAArB,SAAd;AACD,OALH,EAMGC,KANH,CAMSC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,GAArB,CANhB;AAOD,KAnBkB;;AAEjB,SAAKT,gBAAL,GAAwB,IAAIZ,eAAJ,EAAxB;AACA,SAAKsB,KAAL,GAAa;AACXP,MAAAA,QAAQ,EAAE;AADC,KAAb;AAID;;AAcDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyB,KAAKd,KAAL,CAAWe,YAAX,CAAwBC,QAAjD,6BADF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACET,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKK,KAAL,CAAWP,QAAnC,CADF,EAGE,KAAKO,KAAL,CAAWP,QAAX,CACGW,IADH,CACQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,UAAID,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAtB,EAAmC;AACjC,eAAO,CAAP;AACD;;AACD,UAAIF,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAtB,EAAmC;AACjC,eAAO,CAAC,CAAR;AACD,OAFD,MAEO;AACL,YAAIF,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAjB,EAAyB;AACvB,iBAAO,CAAP;AACD;;AACD,YAAIH,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAjB,EAAyB;AACvB,iBAAO,CAAC,CAAR;AACD,SAFD,CAGA;AAHA,aAIK;AACH,gBAAIH,CAAC,CAACI,KAAF,GAAUH,CAAC,CAACG,KAAhB,EAAuB;AACrB,qBAAO,CAAP;AACD;;AACD,gBAAIJ,CAAC,CAACI,KAAF,GAAUH,CAAC,CAACG,KAAhB,EAAuB;AACrB,qBAAO,CAAC,CAAR;AACD,aAFD,MAEO;AACL,kBAAIJ,CAAC,CAACK,QAAF,GAAaJ,CAAC,CAACI,QAAnB,EAA6B;AAC3B,uBAAO,CAAP;AACD;;AACD,kBAAIL,CAAC,CAACK,QAAF,GAAaJ,CAAC,CAACI,QAAnB,EAA6B;AAC3B,uBAAO,CAAC,CAAR;AACD;AACF;AACF;AACF;AACF,KA/BH,EAgCGC,GAhCH,CAgCOlB,QAAQ,IACX,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACmB;AADhB,OAEMnB,QAFN;AAGE,MAAA,MAAM,EAAE,KAAKoB,aAHf;AAIE,MAAA,kBAAkB,EAAE,KAAKxB,kBAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjCJ,CAHF,CAHF,CADF,CADF;AAqDD;;AA5E2C;;AA+E9C,eAAeL,eAAf","sourcesContent":["import React from \"react\";\n\nimport NationalService from \"../../service/Nacional.service\";\n\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\n\n// import CoasterCard from \"./Coaster-card\";\n// import CoasterForm from \"./Coaster-form\";\nimport MyOrderCard from \"../../components/LoteriaNacional/NacionalOrder-CardUser\";\n\nclass MyNationalOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: [],\n     \n    };\n  }\n\n  componentDidMount = () => this.updateNationalList();\n\n  updateNationalList = () => {\n    this._nationalService\n      .myOrderList()\n      .then(nacional => {\n        console.log(nacional);\n        this.setState({ nacional: nacional.data });\n      })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  render() {\n    return (\n      <section>\n        <Container>\n          <h1>Lista de pedidos de {this.props.loggedInUser.username} de Loter√≠a Nacional:</h1>\n\n          <Row>\n           {console.log(\"el state\", this.state.nacional)}\n            {\n            this.state.nacional\n              .sort((a, b) => {\n                if (a.fechaSorteo > b.fechaSorteo) {\n                  return 1;\n                }\n                if (a.fechaSorteo < b.fechaSorteo) {\n                  return -1;\n                } else {\n                  if (a.numero > b.numero) {\n                    return 1;\n                  }\n                  if (a.numero < b.numero) {\n                    return -1;\n                  }\n                  // a must be equal to b\n                  else {\n                    if (a.serie > b.serie) {\n                      return 1;\n                    }\n                    if (a.serie < b.serie) {\n                      return -1;\n                    } else {\n                      if (a.fraccion > b.fraccion) {\n                        return 1;\n                      }\n                      if (a.fraccion < b.fraccion) {\n                        return -1;\n                      }\n                    }\n                  }\n                }\n              })\n              .map(nacional => (\n                <MyOrderCard\n                  key={nacional._id}\n                  {...nacional}\n                  delete={this.deleteHandler}\n                  updateNationalList={this.updateNationalList}\n                />\n              ))\n          }\n          </Row>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default MyNationalOrder;\n"]},"metadata":{},"sourceType":"module"}