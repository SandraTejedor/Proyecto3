{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/quintuple-card.js\";\nimport React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultService from \"../../service/Results.service\"; //import { Link } from \"react-router-dom\";\n\nclass QuintupleCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => this.updateQuintupleList();\n\n    this.updateQuintupleList = () => {\n      this._service.quintuple().then(quintuple => {\n        this.setState({\n          quintuple: quintuple.data\n        });\n      }).catch(err => console.log(\"Error\", err));\n    };\n\n    this._service = new ResultService();\n    this.state = {\n      time: null,\n      quintuple: null,\n      showModalWindow: false\n    };\n  } //state con la info de la card\n  //cuando se monte llamar al servicio y actualizar el state\n\n\n  //pintar la carta con el state\n  render() {\n    return this.state.quintuple ? React.createElement(Col, {\n      className: \"coaster-card\",\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Quintuple Plus del d\\xEDa\"), this.state.quintuple.map((quintuple, index) => React.createElement(\"p\", {\n      className: \"resultadosQuintuple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" Carrera \", index + 1, \": \", quintuple, \" \"))) : \"Esperando resultados...\";\n  }\n\n}\n\nexport default QuintupleCard;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/results/quintuple-card.js"],"names":["React","Component","Col","ResultService","QuintupleCard","constructor","props","componentDidMount","updateQuintupleList","_service","quintuple","then","setState","data","catch","err","console","log","state","time","showModalWindow","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,iBAbmB,GAaC,MAAM,KAAKC,mBAAL,EAbP;;AAAA,SAenBA,mBAfmB,GAeG,MAAM;AAC1B,WAAKC,QAAL,CACGC,SADH,GAEGC,IAFH,CAEQD,SAAS,IAAI;AAEjB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,SAAS,EAAEA,SAAS,CAACG;AAAvB,SAAd;AACH,OALD,EAMGC,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CANhB;AAOD,KAvBkB;;AAEjB,SAAKN,QAAL,GAAgB,IAAIN,aAAJ,EAAhB;AACA,SAAKe,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,IADM;AAEXT,MAAAA,SAAS,EAAE,IAFA;AAGXU,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKD,GATmC,CAWpC;AAEA;;;AAaA;AACAC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKH,KAAL,CAAWR,SAAX,GACL,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAGG,KAAKQ,KAAL,CAAWR,SAAX,CAAqBY,GAArB,CAAyB,CAACZ,SAAD,EAAYa,KAAZ,KACtB;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6CA,KAAK,GAAC,CAAnD,QAAwDb,SAAxD,MADH,CAHH,CADK,GASL,yBATF;AAWD;;AAvCmC;;AA0CtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultService from \"../../service/Results.service\";\n\n//import { Link } from \"react-router-dom\";\n\nclass QuintupleCard extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new ResultService();\n    this.state = {\n      time:null, \n      quintuple: null,\n      showModalWindow: false\n    };\n  }\n\n  //state con la info de la card\n\n  //cuando se monte llamar al servicio y actualizar el state\n  componentDidMount = () => this.updateQuintupleList();\n\n  updateQuintupleList = () => {\n    this._service\n      .quintuple()\n      .then(quintuple => {\n        \n        this.setState({ quintuple: quintuple.data })\n    })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  //pintar la carta con el state\n  render() {\n    return this.state.quintuple ? (\n      <Col className=\"coaster-card\" md={6}>\n        <h4>Quintuple Plus del d√≠a</h4>\n\n        {this.state.quintuple.map((quintuple, index) => (\n            <p className=\"resultadosQuintuple\"> Carrera {index+1}: {quintuple} </p>\n        ))}\n      </Col>\n    ) : (\n      \"Esperando resultados...\"\n    );\n  }\n}\n\nexport default QuintupleCard;\n"]},"metadata":{},"sourceType":"module"}