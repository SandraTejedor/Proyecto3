{"ast":null,"code":"var _jsxFileName = \"/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/vendor/orders.js\";\nimport React from \"react\";\nimport NationalService from \"../../service/Nacional.service\";\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\nimport NationalOrderCard from \"../../components/LoteriaNacional/NacionalOrder-Card\"; // import jsPDF from \"jspdf\";\n\nimport PDF, { Text, AddPage, Line, Image, Table, Html } from \"jspdf-react\";\n\nclass NationalOrder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      //\n      const jsPDF = require(\"jspdf\");\n\n      let pdf = new jsPDF();\n      pdf.text(0, 0, \"Hello World!\");\n      let pdfBase64 = pdf.output(\"prueba\");\n      this.updateNationalList();\n    };\n\n    this.updateNationalList = () => {\n      this._nationalService.nacionalOrder().then(nacional => this.setState({\n        nacional: nacional.data\n      })).catch(err => console.log(\"Error\", err));\n    };\n\n    this.deleteHandler = id => {\n      this._nationalService.deleteOrder(id).then(x => {\n        console.log(\"estoy haciendo el console log\");\n        this.updateNationalList();\n      }).catch(err => console.log(\"Error\", err));\n    };\n\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: [],\n      otro: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PDF, {\n      properties: properties,\n      preview: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Text, {\n      x: 35,\n      y: 25,\n      size: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Octonyan loves jsPDF\"), React.createElement(Image, {\n      src: OctoCatImage,\n      x: 15,\n      y: 40,\n      width: 180,\n      height: 180,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Table, {\n      head: head,\n      body: body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      format: \"a6\",\n      orientation: \"l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Text, {\n      x: 10,\n      y: 10,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sample\"), React.createElement(Line, {\n      x1: 20,\n      y1: 20,\n      x2: 60,\n      y2: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(AddPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Html, {\n      sourceById: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Lista de pedidos:\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.nacional.sort((a, b) => {\n      if (a.fechaSorteo > b.fechaSorteo) {\n        return 1;\n      }\n\n      if (a.fechaSorteo < b.fechaSorteo) {\n        return -1;\n      } else {\n        if (a.numero > b.numero) {\n          return 1;\n        }\n\n        if (a.numero < b.numero) {\n          return -1;\n        } // a must be equal to b\n        else {\n            if (a.serie > b.serie) {\n              return 1;\n            }\n\n            if (a.serie < b.serie) {\n              return -1;\n            } else {\n              if (a.fraccion > b.fraccion) {\n                return 1;\n              }\n\n              if (a.fraccion < b.fraccion) {\n                return -1;\n              }\n            }\n          }\n      }\n    }).map(nacional => React.createElement(NationalOrderCard, Object.assign({\n      key: nacional._id\n    }, nacional, {\n      delete: this.deleteHandler,\n      updateNationalList: this.updateNationalList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default NationalOrder;","map":{"version":3,"sources":["/Users/sandratejedordelso/Desktop/Ironhack/Bootcamp/semana8/Proyecto3/client/src/components/vendor/orders.js"],"names":["React","NationalService","Container","Row","Button","Modal","NationalOrderCard","PDF","Text","AddPage","Line","Image","Table","Html","NationalOrder","Component","constructor","props","componentDidMount","jsPDF","require","pdf","text","pdfBase64","output","updateNationalList","_nationalService","nacionalOrder","then","nacional","setState","data","catch","err","console","log","deleteHandler","id","deleteOrder","x","state","otro","render","properties","OctoCatImage","head","body","sort","a","b","fechaSorteo","numero","serie","fraccion","map","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport NationalService from \"../../service/Nacional.service\";\n\nimport { Container, Row, Button, Modal } from \"react-bootstrap\";\n\nimport NationalOrderCard from \"../../components/LoteriaNacional/NacionalOrder-Card\";\n// import jsPDF from \"jspdf\";\nimport PDF, { Text, AddPage, Line, Image, Table, Html } from \"jspdf-react\";\n\nclass NationalOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this._nationalService = new NationalService();\n    this.state = {\n      nacional: [],\n      otro: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    //\n    const jsPDF = require(\"jspdf\");\n    let pdf = new jsPDF();\n    pdf.text(0, 0, \"Hello World!\");\n    let pdfBase64 = pdf.output(\"prueba\");\n\n    this.updateNationalList();\n  };\n\n  updateNationalList = () => {\n    this._nationalService\n      .nacionalOrder()\n      .then(nacional => this.setState({ nacional: nacional.data }))\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  deleteHandler = id => {\n    this._nationalService\n      .deleteOrder(id)\n      .then(x => {\n        console.log(\"estoy haciendo el console log\");\n        this.updateNationalList();\n      })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  render() {\n    return (\n      <section>\n        <Container>\n          <PDF properties={properties} preview={true}>\n            <Text x={35} y={25} size={40}>\n              Octonyan loves jsPDF\n            </Text>\n            <Image src={OctoCatImage} x={15} y={40} width={180} height={180} />\n            <AddPage />\n            <Table head={head} body={body} />\n            <AddPage format=\"a6\" orientation=\"l\" />\n            <Text x={10} y={10} color=\"red\">\n              Sample\n            </Text>\n            <Line x1={20} y1={20} x2={60} y2={20} />\n            <AddPage />\n            <Html sourceById=\"page\" />\n          </PDF>\n          <h1>Lista de pedidos:</h1>\n\n          <Row>\n            {/* {this.state.nacional.map(nacional => (\n              <NationalCard\n                key={nacional._id}\n                {...nacional}\n                delete={this.deleteHandler}\n                updateNationalList={this.updateNationalList}\n              />\n            )).sort()} */}\n            {this.state.nacional\n              .sort((a, b) => {\n                if (a.fechaSorteo > b.fechaSorteo) {\n                  return 1;\n                }\n                if (a.fechaSorteo < b.fechaSorteo) {\n                  return -1;\n                } else {\n                  if (a.numero > b.numero) {\n                    return 1;\n                  }\n                  if (a.numero < b.numero) {\n                    return -1;\n                  }\n                  // a must be equal to b\n                  else {\n                    if (a.serie > b.serie) {\n                      return 1;\n                    }\n                    if (a.serie < b.serie) {\n                      return -1;\n                    } else {\n                      if (a.fraccion > b.fraccion) {\n                        return 1;\n                      }\n                      if (a.fraccion < b.fraccion) {\n                        return -1;\n                      }\n                    }\n                  }\n                }\n              })\n              .map(nacional => (\n                <NationalOrderCard\n                  key={nacional._id}\n                  {...nacional}\n                  delete={this.deleteHandler}\n                  updateNationalList={this.updateNationalList}\n                />\n              ))}\n          </Row>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default NationalOrder;\n"]},"metadata":{},"sourceType":"module"}